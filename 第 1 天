
# 变量、运算符与数据类型

**注释**：`#` 表示注释，作用于整行。

​         ''' '''或""" """ 表示区间注释，在三引号之间的所有内容被注释

**运算符**：

​       /  %  与c++相同     

​      //代表取整除（返回商的整数部分（**向下取整**））   -9//2=-5

​       **代表幂

**比较运算符**：与c++一样

**逻辑运算符**： and 与         or 或            not 非

**位运算符**：~ 按位取反   计算结论是：~n = -(n+1)

​                   & 按位与     将两个二进制数的每一位都进行比较，如果两个相应的二进位都为 1 则此位为 1， 否则为 0。

​                   | 按位或    将两个二进制数的每一位都进行比较，如果两个相应的二进位有一个为 1 则此位为 1，否则为 0。

​                    ^ 按位异或       如果两个相应的二进位不同则此位为 1，相同为 0。

​                   <<  左移     将数字的位向左移动指定的位数（二进制表示）；

​                   \>> 右移      将数字的位向右移动指定的位数（二进制表示）

**三元运算符**：

```
x, y = 4, 5
if x < y:
    small = x
else:
    small = y

print(small)  # 4
```

**其他运算符**：in 存在     not in 不存在       is 是         is not 不是



**注意**：

- is, is not 对比的是两个变量的内存地址
- ==, != 对比的是两个变量的值
- 比较的两个变量，指向的都是地址不可变的类型（str等），那么is，is not 和 ==，！= 是完全等价的。
- 对比的两个变量，指向的是地址可变的类型（list，dict等），则两者是有区别的。                                                         

**运算符的优先级**

- 一元运算符优于二元运算符。
- 先算术运算，后移位运算，最后位运算。
- 逻辑运算最后结合。

**变量和赋值**

- 在使用变量之前，需要对其先赋值。
- 变量名可以包括字母、数字、下划线、但变量名不能以数字开头。
- 大小写不同含义不同。

**数据类型与转换**

int   float   bool（1 true    0 false）

false       bool（0、0.00、false）

```
bin(a)  是a的二进制
a.bit_length()  是a的二进制长度
type(a)  是a的类型
isinstance(object, classinfo) 判断一个对象是否是一个已知的类型。
要判断两个类型是否相同推荐使用 isinstance()
```

**类型转换**

- 转换为整型 `int(x, base=10)`
- 转换为字符串 `str(object='')`
- 转换为浮点型 `float(x)`

**print() 函数**

```
print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)
```

- 将对象以字符串表示的方式格式化输出到流文件对象file里。其中所有非关键字参数都按`str()`方式进行转换为字符串输出；

- 关键字参数`sep`是实现分隔符，比如多个参数输出时想要输出中间的分隔字符；

- 关键字参数`end`是输出结束时的字符，默认是换行符`\n`；

- 关键字参数`file`是定义流输出的文件，可以是标准的系统输出`sys.stdout`，也可以重定义为别的文件；

- 关键字参数`flush`是立即把内容输出到流文件，不作缓存。

  

*task01：*

1、''' '''或“”“  ”“”

2、**运算符**：

​       /  %  与c++相同     

​      //代表取整除（返回商的整数部分（**向下取整**））   -9//2=-5

​       **代表幂

**比较运算符**：与c++一样

**逻辑运算符**： and 与         or 或            not 非

**位运算符**：~ 按位取反   计算结论是：~n = -(n+1)

​                   & 按位与     将两个二进制数的每一位都进行比较，如果两个相应的二进位都为 1 则此位为 1， 否则为 0。

​                   | 按位或    将两个二进制数的每一位都进行比较，如果两个相应的二进位有一个为 1 则此位为 1，否则为 0。

​                    ^ 按位异或       如果两个相应的二进位不同则此位为 1，相同为 0。

​                   <<  左移     将数字的位向左移动指定的位数（二进制表示）；

​                   \>> 右移      将数字的位向右移动指定的位数（二进制表示）

**三元运算符**：

```
x, y = 4, 5
if x < y:
    small = x
else:
    small = y

print(small)  # 4
```

**其他运算符**：in 存在     not in 不存在       is 是         is not 不是

优先级：一元运算符优于二元运算符。先算术运算，后移位运算，最后位运算。逻辑运算最后结合。

3、is, is not 对比的是两个变量的内存地址==, != 对比的是两个变量的值

4、int   float   bool

- 转换为整型 `int(x, base=10)`
- 转换为字符串 `str(object='')`
- 转换为浮点型 `float(x)`
